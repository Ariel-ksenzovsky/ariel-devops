pipeline {
    agent any

    environment {
        // Define environment variables for paths
        SQL_FILE_PATH = '/tmp/init.sql'  // Set a path with appropriate permissions
    }

    stages {
        stage('Cleanup') {
            steps {
                sh '''
                docker stop docker-gif-app || echo "Container not running"
                docker rm docker-gif-app || echo "Container already removed"
                '''
            }
        }

        stage('Build') {
            steps {
                sh '''
                cd ~
                rm -rf ariel-devops
                pwd
                id
                git clone https://github.com/Ariel-ksenzovsky/ariel-devops.git
                pwd
                cd ariel-devops/Flask/mysql-task
                docker-compose build
                '''
            }
        }

        stage('Prepare SQL File') {
            steps {
                sh '''
                cd ~
                # Copy init.sql to /tmp (ensure permissions)
                cp ariel-devops/Flask/mysql-task/init.sql ${SQL_FILE_PATH}
                '''
            }
        }

        stage('Run') {
            steps {
                sh '''
                cd ~
                docker ps -a  # List containers to check if there's a conflict
                id
                cd ariel-devops/Flask/mysql-task
                sudo chmod -R 775 /var/lib/jenkins
                sudo docker-compose up -d
                docker ps  # Verify if the container is running
                '''
            }
        }

        stage('Test') {
            steps {
                // Wait for the container to start
                sh 'sleep 30'
                // Check logs for errors
                sh '''
                if ! docker logs docker-gif-app; then
                    echo "Container logs check failed"
                    exit 1
                fi
                '''
                // Test the app
                sh '''
                curl http://localhost:5000
                docker logs docker-gif-app
                exit 1
                '''
            }
        }

        stage('Deploy') {
            steps {
                echo 'Deploying...'
            }
        }
    }

    post {
        always {
            // Clean up by removing the copied SQL file after execution
            sh '''
            rm -f ${SQL_FILE_PATH}
            docker-compose down -v
            '''
        }
    }
}
