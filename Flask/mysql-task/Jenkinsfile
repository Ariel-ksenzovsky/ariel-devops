pipeline {
    agent any

    triggers {
        pollSCM('* * * * *') // Poll SCM every minute
    }

    stages {
        stage('Cleanup') {
            steps {
                script {
                    def containerName = 'flask_app_container'
                    sh """
                    if [ \$(docker ps -a -q -f name=\${containerName}) ]; then
                        docker stop \${containerName} || true
                        docker rm \${containerName} || true
                    fi
                    """
                }
            }
        }

        stage('Build') {
            steps {
                sh 'rm -rf ariel-devops'
                sh 'git clone https://github.com/Ariel-ksenzovsky/ariel-devops.git'
                sh 'cd ariel-devops/Flask/mysql-task && docker build -t flask_app:1.0 .'
            }
        }

        stage('Run') {
            steps {
                script {
                    def containerName = 'flask_app_container'
                    sh """
                    docker ps -a -q -f name=\${containerName} | xargs --no-run-if-empty docker rm -f
                    docker run -d -p 5000:5000 --name \${containerName} flask_app:1.0
                    """
                }
            }
        }

        stage('Test') {
            steps {
                // Wait for the container to start
                sh 'sleep 5'
                // Check logs for errors
                script {
                    def containerName = 'flask_app_container'
                    sh """
                    if ! docker logs \${containerName} > /dev/null 2>&1; then
                        echo "Container logs check failed"
                        exit 1
                    fi
                    """
                }
                // Test the app
                sh """
                if ! curl -f http://localhost:5000; then
                    echo "App is not reachable."
                    docker logs flask_app_container
                    exit 1
                fi
                """
            }
        }

        stage('Deploy') {
            steps {
                echo 'Deploying...'
            }
        }
    }
}
